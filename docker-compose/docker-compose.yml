version: "3.8"
services:
  node-server:
    build:
      context: ../backend/server
      target: dev
    container_name: server
    volumes:
      - ../backend/server:/server
    command: npm run dev
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DEBUG: nodejs-docker-express:*
      ELASTIC_SEARCH_URL: http://elasticsearch:9200
    networks:
      - altra_net
    depends_on:
      - elasticsearch

  postgres:
    image: postgres:12
    container_name: postgres
    restart: always
    volumes:
      - altra_db_data:/var/lib/postgresql/data
    ports:
      - 65432:5432
    environment:
      POSTGRES_PASSWORD: postgrespassword

  graphql-engine:
    image: hasura/graphql-engine:v2.0.7
    container_name: hasura
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      #HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_GRAPHQL_ADMIN_SECRET}"
      #HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS512", "key": "-----BEGIN CERTIFICATE-----\nMIIDBzCCAe+gAwIBAgIJY1+6g8v2twPBMA0GCSqGSIb3DQEBCwUAMCExHzAdBgNV\nBAMTFnlva3VtOTc4MC5ldS5hdXRoMC5jb20wHhcNMjEwOTI2MDUwMTM5WhcNMzUw\nNjA1MDUwMTM5WjAhMR8wHQYDVQQDExZ5b2t1bTk3ODAuZXUuYXV0aDAuY29tMIIB\nIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArNWgjdpvcdhJDs+BEpmEqwjL\nQDAAj/WcF2KRf70y1K7KhyvOx66eTA0DjKpE24ATn/t3W6BVt562kGLplUYbB3sz\nskjSmlGURQN465lNcXWO7X1OYi86w0Y7EjTrB8qs+CWORu4EvR3jcdunRZhXzn34\nf2lv9xfszgMLovKCM0958bxb9gccrKp8TekAJXj8mOl5OrHB7MMPQqUzZsiV0/tw\ntRsM90ZrIkjP95nJ5wosN+fTW4cdsm1Nw0nQYJppenPf8IOXNgJ/2F+0fV3F/Qca\npcKmST120BlDgaMPMUbWUPwdwiMz0I/vww3LgqUmcG/0QcOTlFa6WpDXDEXZrwID\nAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRf7ZZJjYlSs8iNbpQq\nC+WCWY5T2TAOBgNVHQ8BAf8EBAMCAoQwDQYJKoZIhvcNAQELBQADggEBAKEFxoAK\nhdB5JaAjBihuxOH38JfS8w+4WMjvVCIzRDdKP8v7JpgTrHyzxCHJg7Rqot6vXD62\nAVvj1XcdDYI3U7vEKuxiHej5+Xi7Pxi7XncoF5tvRP6BqB1rhReq2wwJTQzn6E+Z\nT15/qmnWz918mR4EqTz6lD7B7P8kXGPPovQ9GQhvn+rjCrzc9SDEl7bpThf/3PIb\nXpkIcFjkMZGHiEdTIr8kZBl70WYK+FXRt/wtfK573KN+Up3B16kJIgZBJNqoG9u0\nul7vZINqWBdKZ50WZAqygYFJ4eNLRItaXwvKIY5dLAK999U7oSm7ciGCWb5QNWp0\nV/zQZcgLbmVvNvM=\n-----END CERTIFICATE-----"}'

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - altra_net
    ports:
      - 9200:9200

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - altra_net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  # default dir on Ubuntu: /var/lib/docker/volumes
  altra_db_data:
  es_data:

networks:
  altra_net:
    driver: bridge
